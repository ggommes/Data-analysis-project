# 1.Explore all objectives in the database

-- This query provides a comprehensive overview of the tables in the database.
-- It helps in understanding the overall data structure and available information
SELECT
	table_schema,
	table_name,
	table_type
FROM 
	information_schema.tables
WHERE
	table_schema = 'clinicalajeado';
    
#2.Find the total number of registered patients

-- This query counts unique patients who had an initial consultation for general procedures
SELECT 
	COUNT(distinct CNPJ_CPF) AS 'total_general_procedures_patients'
FROM 
	initial_consultations;
    
-- Counts unique patients from initial orthodontic consultations or installations
 SELECT 
	COUNT(distinct CNPJ_CPF) AS 'total_orthodontics_patients'
	FROM orthodontic_installations;

-- Sums both groups to find the total number of unique registered patients   
SELECT
	(SELECT count(distinct CNPJ_CPF) FROM initial_consultations) + 
    (SELECT count(distinct CNPJ_CPF) FROM orthodontic_installations) AS 'Total of patients registered';
    
#3.Find the total patients that initiated a treatment.

-- Counts unique patients who initiated treatment after their initial consultation
SELECT
	COUNT(distinct CNPJ_CPF) AS 'total_general_procedures_initiated_patients'
FROM
	patient_visits;

-- Counts unique orthodontic patients who began treatment after their initial consultation 
SELECT
	COUNT(distinct CNPJ_CPF) AS 'total_orthodontic_procedures_initiated_patients'
FROM
	orthodontic_appointments;

-- This querie show us how many patitients had initiated orthodontic treatments over the years 
 SELECT
	DATE_FORMAT(INICIO_MANUT, '%Y') AS 'instalation_year',
    COUNT(CNPJ_CPF) AS 'total_patients',
    SUM(COUNT(CNPJ_CPF)) OVER(ORDER BY DATE_FORMAT(INICIO_MANUT, '%Y')) 'sum_over_years'
FROM
	orthodontic_installations
WHERE
	DATE_FORMAT(INICIO_MANUT, '%Y') IS NOT NULL
 GROUP BY 
	DATE_FORMAT(INICIO_MANUT, '%Y');

-- Sums patients who initiated any type of treatment. 
SELECT
	(SELECT COUNT(distinct CNPJ_CPF) FROM patient_visits) + 
    (SELECT COUNT(distinct CNPJ_CPF) FROM orthodontic_appointments) AS 'Total patients that initiated trataments'
    
#4.Find all cities patients come from and the total patients by city
    
SELECT
	CIDADE AS 'city',
	COUNT(CGC_CPF) AS 'patient_id'
FROM
	patients
GROUP BY
	CIDADE
ORDER BY
	patient_id DESC;
-- This discrepancy likely stems from inconsistencies during patient registration
-- Possible causes include data entry errors, incomplete forms, or patients not providing information
    
# 5.find wich channel patients come from 

-- This query identifies how patients initially found or learned about the clinic,
-- then counts the number of patients from each acquisition channel
SELECT 
	ORIGEM_PACIENTE AS 'acquisition channel',
	COUNT(ORIGEM_PACIENTE) AS 'number of patients'
FROM
	patients
GROUP BY ORIGEM_PACIENTE;

-- Missing data in the total count indicates incomplete registration information,
-- potentially due to details not provided by patients or not recorded by staff.

#6.Find all specialities offerd by the dental clinic and the how many dentistry treatments are offered

SELECT*
FROM
	specialities;
    
-- This query lists all general dentistry treatments provided by the clinic.
SELECT 
	NOME AS 'general_treatments_offered'
FROM
	products;

-- This query lists all distinct orthodontic treatments available at the clinic
SELECT 
	DISTINCT(NOME) AS 'orthodontic_treatments_offered'
FROM 
	orthodontic_treatment_prices;

#7. Identify the First and Last Patient Registration Dates

-- This query shows the registration dates for the very first and most recent patient
-- The time span between these dates indicates the total period of data available for analysis
SELECT 
	MIN(data_lanc) AS 'first_patient_registration_date',
    MAX(data_lanc) AS 'last_patient_registration_date',
	TIMESTAMPDIFF(year,MIN(data_lanc),MAX(data_lanc)) AS 'years_available_for_analysis'
FROM
	patient_visits;

# 8. Identify the youngest and oldest patient

-- This helps determine the age range of the clinic's clientele.
SELECT
	MIN(DT_NASCIMENTO) AS 'oldest_patient_birthdate',
	TIMESTAMPDIFF(YEAR,MIN(DT_NASCIMENTO),CURDATE()) AS 'age',
    MAX(DT_NASCIMENTO) AS 'youngest_patient_age_years',
    TIMESTAMPDIFF(YEAR,MAX(DT_NASCIMENTO),CURDATE()) AS'age'
FROM 
	patients;
    
#9.Identify total sales

-- calculates the total sales for general procedures and orthodontics separately.
SELECT
	ROUND(SUM(VRBRUTO)) AS 'total_general_procedures_sales'
FROM
	direct_payments;
    
SELECT
	ROUND(SUM(VALOR)) 'total_orthodontic_procedures_sales'
FROM orthodontic_payments;

-- Combined total sales from all procedures
SELECT
	(SELECT ROUND(SUM(VRBRUTO)) FROM direct_payments) + 
	(SELECT ROUND(SUM(VALOR)) FROM orthodontic_payments) AS 'total_sales';
    
# 10.Find how many procedures were executed

-- Count of executed general procedures	
SELECT 
	COUNT(distinct DOCUMENTO) AS 'total_general_procedures_executed'
FROM 
	executed_procedures;

-- Count of orthodontic procedures
SELECT 
	COUNT(distinct LANCTO) AS 'total_orthodontic_procedures_executed'
FROM 
	orthodontic_appointments;

-- Sum of the all the procedures executed    
SELECT
	(SELECT COUNT(distinct DOCUMENTO) FROM executed_procedures) + 
    (SELECT COUNT(distinct LANCTO)FROM orthodontic_appointments) AS 'total_executed_procedures';

#11.Find the average selling prices for general and orthodontics procedures

-- Average selling price of general procedures
SELECT
	ROUND(AVG(VRBRUTO),2) AS 'avg_general_procedures_selling_price'
FROM 
	direct_payments;

-- Average selling price of orthodontic procedures    
SELECT
	ROUND(AVG(VALOR),2) AS 'avg_orthodontic_procedures_selling_price'
FROM 
	orthodontic_payments;
    
#12.Find the total of treatments services offered

-- Total number of distinct general treatments offered
SELECT 
	COUNT(distinct NOME) AS 'total_general_treatments'
FROM
	products;

-- Total number of distinct orthodontic treatments offered    
SELECT 
	count(distinct CODIGO) AS 'total_orthodontic_treatments'
FROM
	orthodontic_treatment_prices;

-- Total number of unique treatments offered (general + orthodontic)    
SELECT
	(SELECT COUNT(distinct NOME) AS 'Number of general treatments' FROM products) + 
    (SELECT count(distinct CODIGO) AS 'Number of orthodontics treatments' FROM orthodontic_treatment_prices) AS 'Total of treatments offered';
    

# Core business metrics report
-- This presents key performance indicators (KPIs) in a single, easy-to-read table
-- for quick insights into the clinic's overall performance.

SELECT
    'Total of patients registerd' AS KPI,
    ((SELECT count(distinct CNPJ_CPF) FROM initial_consultations) + 
	(SELECT count(distinct CNPJ_CPF) FROM orthodontic_installations)) AS Result
	UNION ALL
SELECT
	'Patients that initiated treatments' AS KPI,
	((SELECT COUNT(distinct CNPJ_CPF) FROM patient_visits) + 
    (SELECT COUNT(distinct CNPJ_CPF) FROM orthodontic_appointments)) AS Result
	UNION ALL
SELECT
	'Total sales' AS KPI,
	((SELECT ROUND(SUM(VRBRUTO)) FROM direct_payments) + 
	(SELECT ROUND(SUM(VALOR)) FROM orthodontic_payments)) AS Result
    UNION ALL
SELECT
	'Total Number of executed procedures' AS KPI,
    ((SELECT COUNT(distinct DOCUMENTO) FROM executed_procedures) + 
    (SELECT COUNT(distinct LANCTO)FROM orthodontic_appointments)) AS Result
    UNION ALL
SELECT
	'Number of treatments offered' AS KPI,
	((SELECT COUNT(distinct NOME) FROM products) + 
    (SELECT count(distinct CODIGO) FROM orthodontic_treatment_prices)) AS Result
    UNION ALL
SELECT
	'AVG general procedures prices' AS KPI,
	(SELECT ROUND(AVG(VRBRUTO),2) AS 'avg_selling_price_of_general_procedures' FROM  direct_payments) AS Result
	UNION ALL
SELECT
	'AVG orthodontic procedures prices' AS KPI,
    (SELECT ROUND(AVG(VALOR),2) FROM orthodontic_payments) AS Result;
    

